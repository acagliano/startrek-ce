; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\CLASSES\COORDS.C"
	.assume ADL=1
	SEGMENT CODE
;    1	
;    2	
;    3	#include "coords.h"
;    4	
;    5	
;    6	vector_t* coords_GetVector(coords_t* origin, coords_t* dest){
_coords_GetVector:
	LD	HL,-24
	CALL	__frameset
;    7	    vector_t vector;
;    8	    signed long x = origin->x - dest->x;
	LD	IY,(IX+6)
	LD	HL,(IY+0)
	LD	E,(IY+3)
	LD	IY,(IX+9)
	LD	BC,(IY+0)
	LD	A,(IY+3)
	CALL	__lsub
	LD	(IX+-4),HL
	LD	(IX+-1),E
;    9	    signed long y = origin->y - dest->y;
	LD	IY,(IX+6)
	LD	HL,(IY+4)
	LD	E,(IY+7)
	LD	IY,(IX+9)
	LD	BC,(IY+4)
	LD	A,(IY+7)
	CALL	__lsub
	LD	(IX+-8),HL
	LD	(IX+-5),E
;   10	    signed long z = origin->z - dest->z;
	LD	IY,(IX+6)
	LD	HL,(IY+8)
	LD	E,(IY+11)
	LD	IY,(IX+9)
	LD	BC,(IY+8)
	LD	A,(IY+11)
	CALL	__lsub
	LD	(IX+-12),HL
	LD	(IX+-9),E
;   11	    vector.x = x;
	LD	BC,(IX+-4)
	LD	A,(IX+-1)
	LD	(IX+-24),BC
	LD	(IX+-21),A
;   12	    vector.y = y;
	LD	BC,(IX+-8)
	LD	A,(IX+-5)
	LD	(IX+-20),BC
	LD	(IX+-17),A
;   13	    vector.z = z;
	LD	BC,(IX+-12)
	LD	A,(IX+-9)
	LD	(IX+-16),BC
	LD	(IX+-13),A
;   14	    return &vector;
	LEA	HL,IX+-24
;   15	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _coords_GetVector ***************************
;Name                         Addr/Register   Size   Type
;vector                               IX-24     12   variable
;z                                    IX-12      4   variable
;y                                     IX-8      4   variable
;x                                     IX-4      4   variable
;dest                                  IX+9      3   parameter
;origin                                IX+6      3   parameter


; Stack Frame Size: 36 (bytes)
;       Spill Code: 0 (instruction)


	XREF __lsub:ROM
	XREF __frameset:ROM
	XDEF _coords_GetVector
	END
