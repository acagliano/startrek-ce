; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\STATSCREENS.C"
	.assume ADL=1
	SEGMENT DATA
_mains_title:
	DB	91
	DB	77
	DB	65
	DB	73
	DB	78
	DB	32
	DB	83
	DB	89
	DB	83
	DB	93
	DB	0
_tact_title:
	DB	91
	DB	84
	DB	65
	DB	67
	DB	84
	DB	73
	DB	67
	DB	65
	DB	76
	DB	32
	DB	83
	DB	89
	DB	83
	DB	93
	DB	0
_version:
	DB	118
	DB	48
	DB	46
	DB	56
	DB	54
	DB	32
	DB	112
	DB	114
	DB	101
	DB	45
	DB	97
	DB	108
	DB	112
	DB	104
	DB	97
	DB	0
_moduledb:
	DB	76
	DB	105
	DB	102
	DB	101
	DB	83
	DB	117
	DB	112
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	67
	DB	111
	DB	114
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	87
	DB	97
	DB	114
	DB	112
	DB	68
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	73
	DB	109
	DB	112
	DB	117
	DB	108
	DB	115
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	78
	DB	97
	DB	118
	DB	83
	DB	101
	DB	110
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	84
	DB	114
	DB	97
	DB	110
	DB	115
	DB	112
	DB	116
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	83
	DB	104
	DB	105
	DB	101
	DB	108
	DB	100
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	114
	DB	109
	DB	111
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	80
	DB	104
	DB	97
	DB	115
	DB	101
	DB	114
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	84
	DB	111
	DB	114
	DB	112
	DB	101
	DB	100
	DB	111
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	84
	DB	97
	DB	114
	DB	103
	DB	83
	DB	101
	DB	110
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
;    1	#include <tice.h>
;    2	#include <string.h>
;    3	#include "classes/ships.h"
;    4	#include "statscreens.h"
;    5	#include "gfx/trekgui.h"
;    6	#include "classes/screens.h"
;    7	#include <graphx.h>
;    8	#include <compression.h>
;    9	#include "gfx-engine/gui.h"
;   10	#include "classes/modules.h"
;   11	#include "gfx/moduleicons.h"
;   12	#include "equates.h"
;   13	#include <debug.h>
;   14	#define gfx_RectangleColor(color, x1, y1, w, h) \
;   15	    gfx_SetColor((color)); \
;   16	    gfx_Rectangle((x1), (y1), (w), (h));
;   17	#define gfx_FillRectangleColor(color, x1, y1, w, h) \
;   18	    gfx_SetColor((color)); \
;   19	    gfx_FillRectangle((x1), (y1), (w), (h));
;   20	
;   21	char mains_title[] = "[MAIN SYS]";
;   22	char tact_title[] = "[TACTICAL SYS]";
;   23	char version[] = "v0.86 pre-alpha";
;   24	
;   25	char moduledb[][12] = {
	SEGMENT CODE
;   26	    "LifeSup",
;   27	    "Core",
;   28	    "WarpDr",
;   29	    "Impulse",
;   30	    "NavSens",
;   31	    "Transpt",
;   32	    "Shields",
;   33	    "Armor",
;   34	    "Phasers",
;   35	    "Torpedo",
;   36	    "TargSens"
;   37	};
;   38	
;   39	int text_GetCenterX(char* string){
_text_GetCenterX:
	CALL	__frameset0
;   40	    return (LCD_WIDTH - gfx_GetStringWidth(string)) / 2;
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_gfx_GetStringWidth
	POP	BC
	LD	BC,HL
	LD	HL,320
	OR	A,A
	SBC	HL,BC
	LD	A,1
	CALL	__ishru_b
;   41	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _text_GetCenterX ***************************
;Name                         Addr/Register   Size   Type
;_gfx_GetStringWidth                 IMPORT  -----   function
;string                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   42	
;   43	int num_GetLength(int number){
_num_GetLength:
	CALL	__frameset0
;   44	    return 1 + (number >= 10) + (number >= 100);
	LD	BC,10
	LD	HL,(IX+6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L__2
	LD	B,1
	JR	L__3
L__2:
	LD	B,0
L__3:
	LD	A,B
	SEXT	HL
	LD	L,B
	INC	HL
	LD	DE,HL
	LD	HL,(IX+6)
	OR	A,A
	LD	BC,100
	SBC	HL,BC
	CALL	__setflag
	JP	M,L__5
	LD	B,1
	JR	L__6
L__5:
	LD	B,0
L__6:
	LD	A,B
	SEXT	HL
	LD	L,B
	ADD	HL,DE
;   45	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _num_GetLength ***************************
;Name                         Addr/Register   Size   Type
;number                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   46	
;   47	void Screen_RenderUI(uint24_t screen, ship_t* Ship, selected_t* select){
_Screen_RenderUI:
	CALL	__frameset0
;   48	    Screen_Background(screen);
	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	CALL	_Screen_Background
	POP	BC
;   49	    gfx_SetTextFGColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   50	    switch(screen & 0xff){
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	CALL	__seqcase
L__8:
	DW	6
	DW	0
	DB	0
	DW24	L_9	

	DW24	L_9	

	DW24	L_4	

	DW24	L_5	

	DW24	L_9	

	DW24	L_9	

	DW24	L_9	

;   51	        case SCRN_OFF:
;   52	            break;
;   53	        case SCRN_SENS:
;   54	            break;
;   55	        case SCRN_TACT:
L_4:
;   56	            Screen_UITacticalStats(&Ship->tactical, select->tactical);
	LD	IY,(IX+12)
	LD	BC,(IY+3)
	PUSH	BC
	LD	BC,(IX+9)
	LD	HL,339
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_Screen_UITacticalStats
	POP	BC
	POP	BC
;   57	            break;
	JR	L_9
;   58	        case SCRN_MAINS:
L_5:
;   59	            Screen_UISystemStats(&Ship->system, select->mains);
	LD	IY,(IX+12)
	LD	BC,(IY+0)
	PUSH	BC
	LD	IY,(IX+9)
	PEA	IY+15
	CALL	_Screen_UISystemStats
	POP	BC
	POP	BC
;   60	            break;
;   61	        case SCRN_TRANSPORT:
;   62	            break;
;   63	        case SCRN_CARGO:
;   64	            break;
;   65	    }
L_9:
;   66	    if(screen > 0xff) {
	LD	BC,(IX+6)
	LD	HL,255
	OR	A,A
	SBC	HL,BC
	JR	NC,L_10
;   67	        gfx_PrintStringXY("Info Window Here", 60, 100);
	LD	BC,100
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	BC,L__10
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   68	    }
L_10:
;   69	    gfx_BlitBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;   70	    gfx_SetTextFGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   71	    return;
;   72	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_RenderUI ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Blit                           IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_Screen_UISystemStats               IMPORT  -----   function
;_Screen_UITacticalStats             IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_Screen_Background                  IMPORT  -----   function
;select                               IX+12      3   parameter
;Ship                                  IX+9      3   parameter
;screen                                IX+6      3   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__10:
	DB	"Info Window Here"
	DB	0
	SEGMENT CODE
;   73	
;   74	void Screen_UISystemStats(module_t* systems, uint24_t selected){
_Screen_UISystemStats:
	LD	HL,-5
	CALL	__frameset
;   75	    unsigned char i, cur_y;
;   76	    int cur_x;
;   77	    gfx_RLETSprite(mains_display, viewer_x, viewer_y - 3);
	LD	BC,17
	PUSH	BC
	LD	HL,_trekgui+42
	LD	BC,30
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;   78	    gfx_PrintStringXY(mains_title, viewer_x + 30, viewer_y + 1);
	LD	BC,21
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	BC,_mains_title
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   79	    for(i = 0; i < SYS_MAX; i++){
	LD	(IX+-1),0
	JR	L_17
L_15:
;   80	        // loop module health display
;   81	        module_t* module = &systems[i];
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,54
	CALL	__imul_b
	LD	BC,(IX+6)
	ADD	HL,BC
	LD	(IX+-5),HL
;   82	        cur_y = i * 18 + viewer_y + 14;
	LD	B,18
	LD	C,(IX+-1)
	MLT	BC
	LD	A,C
	ADD	A,34
	LD	(IX+-2),A
;   83	        cur_x = viewer_x + 40;
;   84	        if(selected == i) {
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+9)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_14
;   85	            gfx_SetColor(230);
	LD	BC,230
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   86	            gfx_FillRectangle(cur_x - 6, cur_y, 6, 16);
	LD	BC,16
	PUSH	BC
	LD	BC,6
	PUSH	BC
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,64
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   87	        }
L_14:
;   88	        gfx_SetColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   89	        gfx_SetTextXY(cur_x, cur_y);
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,70
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   90	        module_RenderGeneral(module, cur_x, cur_y);
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	LD	BC,70
	PUSH	BC
	LD	BC,(IX+-5)
	PUSH	BC
	CALL	_module_RenderGeneral
	POP	BC
	POP	BC
	POP	BC
	INC	(IX+-1)
;   91	       
;   92	    }
L_17:
	LD	A,(IX+-1)
	CP	A,6
	JR	C,L_15
;   93	    return;
;   94	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_UISystemStats ***************************
;Name                         Addr/Register   Size   Type
;_module_RenderGeneral               IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_mains_title                        STATIC     11   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_trekgui                            IMPORT     51   variable
;_gfx_RLETSprite                     IMPORT  -----   function
;module                                IX-5      3   variable
;cur_y                                 IX-2      1   variable
;i                                     IX-1      1   variable
;selected                              IX+9      3   parameter
;systems                               IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


;   95	
;   96	void Screen_UITacticalStats(module_t* tactical, uint24_t selected){
_Screen_UITacticalStats:
	LD	HL,-24
	CALL	__frameset
;   97	    unsigned char i, cur_y = viewer_y + 20;
	LD	(IX+-2),40
;   98	    int cur_x = viewer_x;
	LD	BC,30
	LD	(IX+-8),BC
;   99	    uint24_t shield_health = 0, shield_resist = 0, shield_num = 0;
	LD	BC,0
	LD	(IX+-5),BC
	LD	(IX+-24),BC
	LD	(IX+-17),BC
;  100	    bool shields_active = false;
	LD	(IX+-18),0
;  101	    gfx_RLETSprite(tactical_display, viewer_x, viewer_y - 3);
	LD	BC,17
	PUSH	BC
	LD	HL,_trekgui+39
	LD	BC,30
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  102	    gfx_PrintStringXY(tact_title, viewer_x + 37, viewer_y + 1);
	LD	BC,21
	PUSH	BC
	LD	BC,67
	PUSH	BC
	LD	BC,_tact_title
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  103	    for(i = 0; i < TACT_MAX; i++){
	LD	(IX+-1),0
	JR	L_28
L_26:
;  104	        int temp_y = 18 * i + viewer_y + 14;
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,18
	CALL	__imul_b
	LD	IY,HL
	LEA	IY,IY+34
	LD	(IX+-21),IY
;  105	        int temp_x = cur_x + 90;
;  106	        module_t* module = &tactical[i];
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,54
	CALL	__imul_b
	LD	BC,(IX+6)
	ADD	HL,BC
	LD	(IX+-11),HL
;  107	        if(selected == i) {
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+9)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_22
;  108	            gfx_SetColor(230);
	LD	BC,230
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  109	            gfx_FillRectangle(temp_x - 6, temp_y, 6, 16);
	LD	BC,16
	PUSH	BC
	LD	BC,6
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	LD	BC,114
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  110	        }
L_22:
;  111	        module_RenderGeneral(module, temp_x, temp_y);
	LD	C,(IX+-21)
	LD	B,0
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,(IX+-11)
	PUSH	BC
	CALL	_module_RenderGeneral
	POP	BC
	POP	BC
	POP	BC
;  112	        if(module->techtype == SHIELD){
	LD	IY,(IX+-11)
	LD	A,(IY+3)
	CP	A,6
	JR	NZ,L_27
;  113	            if(module->online){
	LD	IY,(IX+-11)
	LD	A,(IY+4)
	OR	A,A
	JR	Z,L_27
;  114	                shields_active = true;
	LD	(IX+-18),1
;  115	                shield_health += health_GetHealthPercent(&module->health);
	LD	IY,(IX+-11)
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	LD	BC,(IX+-5)
	ADD	HL,BC
	LD	(IX+-5),HL
;  116	                shield_resist *= module->data.mod_shields.resistance;
	LD	IY,(IX+-11)
	LD	HL,(IY+27)
	LD	BC,(IX+-24)
	CALL	__imulu
	LD	(IX+-24),HL
;  117	                shield_num++;
	LD	BC,(IX+-17)
	INC	BC
	LD	(IX+-17),BC
;  118	            }
;  119	        }
;  120	    }
L_27:
	INC	(IX+-1)
L_28:
	LD	A,(IX+-1)
	CP	A,6
	JR	C,L_26
;  121	        if(shields_active) {
	LD	A,(IX+-18)
	OR	A,A
	JR	Z,L_35
;  122	            gfx_rletsprite_t* shield_icon = icon_shieldsstable;
	LD	HL,_trekgui+6
	LD	BC,(HL)
	LD	(IX+-14),BC
;  123	            shield_health /= shield_num;
	LD	HL,(IX+-5)
	LD	BC,(IX+-17)
	CALL	__idivu
	LD	(IX+-5),HL
;  124	            if(shield_health <= 50) shield_icon = icon_shieldscollapse;
	LD	BC,HL
	LD	HL,50
	OR	A,A
	SBC	HL,BC
	JR	C,L_31
	LD	HL,_trekgui+9
	LD	BC,(HL)
	LD	(IX+-14),BC
L_31:
;  125	            if(shield_health <= 25) shield_icon = icon_shieldsfail;
	LD	BC,(IX+-5)
	LD	HL,25
	OR	A,A
	SBC	HL,BC
	JR	C,L_32
	LD	HL,_trekgui+12
	LD	BC,(HL)
	LD	(IX+-14),BC
L_32:
;  126	            gfx_RLETSprite(shield_icon, cur_x + 5, cur_y + 5);
	LD	BC,45
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,(IX+-14)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  127	            cur_y += shield_icon->height + 10;
	LD	IY,(IX+-14)
	LD	A,(IY+1)
	ADD	A,50
	LD	(IX+-2),A
;  128	            gfx_RLETSprite(icon_shieldinteg, cur_x, cur_y - 1);
	UEXT	HL
	LD	L,A
	DEC	HL
	PUSH	HL
	LD	HL,_trekgui+48
	LD	BC,30
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  129	            cur_x += 12;
;  130	            stats_DrawHealthBar(shield_health, 60, cur_x, cur_y, 25, 107, 29);
	LD	BC,29
	PUSH	BC
	LD	BC,107
	PUSH	BC
	LD	BC,25
	PUSH	BC
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	LD	BC,42
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	BC,(IX+-5)
	PUSH	BC
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  131	            cur_y += 15; cur_x = viewer_x;
	LD	A,(IX+-2)
	ADD	A,15
	LD	(IX+-2),A
	LD	BC,30
	LD	(IX+-8),BC
;  132	        }
L_35:
;  133	        gfx_RLETSprite(icon_hullinteg, cur_x, cur_y - 1);
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	DEC	HL
	PUSH	HL
	LD	HL,_trekgui+45
	LD	BC,(IX+-8)
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  134	        cur_x += 12;
	LD	IY,(IX+-8)
	LEA	BC,IY+12
	LD	(IX+-8),BC
;  135	        stats_DrawHealthBar(health_GetHealthPercent(&tactical[TACT_MAX].health), 60, cur_x, cur_y, 33, 107, 74);
	LD	BC,74
	PUSH	BC
	LD	BC,107
	PUSH	BC
	LD	BC,33
	PUSH	BC
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	HL,(IX+6)
	LD	BC,324
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	PUSH	HL
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  136	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_UITacticalStats ***************************
;Name                         Addr/Register   Size   Type
;_stats_DrawHealthBar                IMPORT  -----   function
;_health_GetHealthPercent            IMPORT  -----   function
;_module_RenderGeneral               IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_tact_title                         STATIC     15   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_trekgui                            IMPORT     51   variable
;_gfx_RLETSprite                     IMPORT  -----   function
;shield_resist                        IX-24      3   variable
;temp_y                               IX-21      3   variable
;shields_active                       IX-18      1   variable
;shield_num                           IX-17      3   variable
;shield_icon                          IX-14      3   variable
;module                               IX-11      3   variable
;cur_x                                 IX-8      3   variable
;shield_health                         IX-5      3   variable
;cur_y                                 IX-2      1   variable
;i                                     IX-1      1   variable
;selected                              IX+9      3   parameter
;tactical                              IX+6      3   parameter


; Stack Frame Size: 36 (bytes)
;       Spill Code: 0 (instruction)


;  137	
;  138	
;  139	
;  140	
;  141	
;  142	void module_RenderGeneral(module_t* module, uint24_t x, uint8_t y){
_module_RenderGeneral:
	LD	HL,-23
	CALL	__frameset
;  143	    int24_t health = health_GetHealthPercent(&module->health);
	LD	IY,(IX+6)
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	LD	(IX+-20),HL
;  144	    uint8_t bar = (module->techtype < SYS_MAX) ? 77 : 29;
	LD	IY,(IX+6)
	LD	A,(IY+3)
	CP	A,6
	JR	NC,L_39
	LD	BC,77
	LD	(IX+-11),BC
	JR	L_40
L_39:
	LD	BC,29
	LD	(IX+-11),BC
L_40:
	LD	A,(IX+-11)
	LD	(IX+-8),A
;  145	    uint24_t x_space = vWidth - (x + 10);
	LD	IY,(IX+9)
	LEA	BC,IY+10
	LD	HL,300
	OR	A,A
	SBC	HL,BC
	LD	(IX+-3),HL
;  146	    uint24_t width = (x_space > 200) ? 200 : x_space;
	LD	BC,HL
	LD	HL,200
	OR	A,A
	SBC	HL,BC
	JR	NC,L_43
	LD	BC,200
	LD	(IX+-17),BC
	JR	L_44
L_43:
	LD	BC,(IX+-3)
	LD	(IX+-17),BC
L_44:
	LD	BC,(IX+-17)
	LD	(IX+-6),BC
;  147	    gfx_RectangleColor(229, x, y, width, 16);
	LD	BC,229
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,16
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,(IX+9)
	PUSH	BC
	CALL	_gfx_Rectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  148	    if(module->assigned){
	LD	IY,(IX+6)
	LD	A,(IY+1)
	OR	A,A
	JR	Z,L_53
;  149	        uint8_t techtype = module->techtype;
	LD	IY,(IX+6)
	LD	A,(IY+3)
	LD	(IX+-7),A
;  150	        uint24_t barwidth;
;  151	        x_space -= 90;
	LD	IY,(IX+-3)
	LEA	IY,IY+-90
	LD	(IX+-3),IY
;  152	        barwidth = (x_space > 100) ? 100 : x_space;
	LD	BC,IY
	LD	HL,100
	OR	A,A
	SBC	HL,BC
	JR	NC,L_47
	LD	BC,100
	LD	(IX+-14),BC
	JR	L_48
L_47:
	LD	BC,(IX+-3)
	LD	(IX+-14),BC
L_48:
	LD	BC,(IX+-14)
	LD	(IX+-23),BC
;  153	        if(module->online){
	LD	IY,(IX+6)
	LD	A,(IY+4)
	OR	A,A
	JR	Z,L_50
;  154	            gfx_FillRectangleColor(3, x + 1, y + 1, width - 2, 14);}
	LD	BC,3
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,14
	PUSH	BC
	LD	IY,(IX+-6)
	LEA	BC,IY+-2
	PUSH	BC
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	INC	HL
	PUSH	HL
	LD	BC,(IX+9)
	INC	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  155	        else{
	JR	L_51
L_50:
;  156	            gfx_FillRectangleColor(96, x + 1, y + 1, width - 2, 14);}
	LD	BC,96
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,14
	PUSH	BC
	LD	IY,(IX+-6)
	LEA	BC,IY+-2
	PUSH	BC
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	INC	HL
	PUSH	HL
	LD	BC,(IX+9)
	INC	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
L_51:
;  157	        gfx_FillRectangleColor(0, x+1, y+1, 14, 14);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,14
	PUSH	BC
	PUSH	BC
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	INC	HL
	PUSH	HL
	LD	BC,(IX+9)
	INC	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  158	        gfx_RLETSprite(modicons[techtype], x + 1, y + 1);
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	INC	HL
	PUSH	HL
	LD	BC,(IX+9)
	INC	BC
	PUSH	BC
	LD	A,(IX+-7)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_modicons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  159	        gfx_PrintStringXY(moduledb[techtype], x + 20, y + 5);
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+5
	PUSH	BC
	LD	IY,(IX+9)
	LEA	BC,IY+20
	PUSH	BC
	LD	A,(IX+-7)
	UEXT	HL
	LD	L,A
	LD	A,12
	CALL	__imul_b
	LD	BC,_moduledb
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  160	        stats_DrawHealthBar(health, barwidth, x + 80, y + 4, 0, 149, bar);
	LD	C,(IX+-8)
	LD	B,0
	PUSH	BC
	LD	BC,149
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	A,(IX+12)
	ADD	A,4
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	IY,(IX+9)
	LEA	BC,IY+80
	PUSH	BC
	LD	BC,(IX+-23)
	PUSH	BC
	LD	BC,(IX+-20)
	PUSH	BC
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  161	    }
;  162	    else {
	JR	L_54
L_53:
;  163	        gfx_FillRectangleColor(74, x + 1, y + 1, width - 2, 14);
	LD	BC,74
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,14
	PUSH	BC
	LD	IY,(IX+-6)
	LEA	BC,IY+-2
	PUSH	BC
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	INC	HL
	PUSH	HL
	LD	BC,(IX+9)
	INC	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  164	        gfx_PrintStringXY("unassigned", x + 10, y + 5);
	LD	A,(IX+12)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+5
	PUSH	BC
	LD	IY,(IX+9)
	LEA	BC,IY+10
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  165	    }
;  166	}
L_54:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _module_RenderGeneral ***************************
;Name                         Addr/Register   Size   Type
;_stats_DrawHealthBar                IMPORT  -----   function
;_moduledb                           STATIC    132   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_modicons                           IMPORT  unknown variable
;_gfx_RLETSprite                     IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_Rectangle                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_health_GetHealthPercent            IMPORT  -----   function
;barwidth                             IX-23      3   variable
;health                               IX-20      3   variable
;temp41                               IX-17      3   variable
;temp45                               IX-14      3   variable
;temp37                               IX-11      3   variable
;bar                                   IX-8      1   variable
;techtype                              IX-7      1   variable
;width                                 IX-6      3   variable
;x_space                               IX-3      3   variable
;y                                    IX+12      1   parameter
;x                                     IX+9      3   parameter
;module                                IX+6      3   parameter


; Stack Frame Size: 38 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__28:
	DB	"unassigned"
	DB	0
	SEGMENT CODE
;  167	
;  168	
;  169	
;  170	
;  171	
;  172	
;  173	
;  174	
;  175	
;  176	
;  177	
;  178	void Screen_Background(unsigned char active) {
_Screen_Background:
	LD	HL,-3
	CALL	__frameset
;  179	    int i;
;  180	    gfx_SetTextFGColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  181	    gfx_ZeroScreen();
	CALL	_gfx_ZeroScreen
;  182	    gfx_RLETSprite(shipinterior_left, 0, 0);
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(_trekgui)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  183	    gfx_RLETSprite(shipinterior_right, 160, 0);
	LD	BC,0
	PUSH	BC
	LD	HL,_trekgui+3
	LD	BC,160
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  184	    for(i = 0; i < 320; i++){
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_58
L_56:
;  185	        gfx_SetColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  186	        gfx_Rectangle(i * 64, 216, 64, 20);
	LD	BC,20
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,216
	PUSH	BC
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	PUSH	HL
	CALL	_gfx_Rectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  187	    }
L_58:
	LD	BC,320
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_56
;  188	    gfx_SetColor(116);
	LD	BC,116
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  189	    if(active) gfx_FillRectangle(--active*64+1, 217, 62, 18);
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_61
	DEC	(IX+6)
	LD	BC,18
	PUSH	BC
	LD	BC,62
	PUSH	BC
	LD	BC,217
	PUSH	BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	INC	HL
	PUSH	HL
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
L_61:
;  190	    gfx_PrintStringXY("Sensors", 4, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  191	    gfx_PrintStringXY("Tactical", 68, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,L__33
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  192	    gfx_PrintStringXY("MainSys", 134, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,134
	PUSH	BC
	LD	BC,L__34
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  193	    gfx_PrintStringXY("Repair", 200, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,200
	PUSH	BC
	LD	BC,L__35
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  194	    gfx_PrintStringXY("Cargo", 268, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,268
	PUSH	BC
	LD	BC,L__36
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  195	    gfx_SetTextFGColor(148);
	LD	BC,148
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  196	    gfx_PrintStringXY(version, 160 - (7 * strlen(version) / 2), 0);
	LD	BC,0
	PUSH	BC
	LD	BC,_version
	PUSH	BC
	CALL	_strlen
	POP	BC
	LD	A,7
	CALL	__imul_b
	LD	A,1
	CALL	__ishru_b
	LD	BC,HL
	LD	HL,160
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_version
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  197	    gfx_SetTextFGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  198	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_Background ***************************
;Name                         Addr/Register   Size   Type
;_version                            STATIC     16   variable
;_strlen                             IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_Rectangle                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_trekgui                            IMPORT     51   variable
;_gfx_RLETSprite                     IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;i                                     IX-3      3   variable
;active                                IX+6      1   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__32:
	DB	"Sensors"
	DB	0
L__33:
	DB	"Tactical"
	DB	0
L__34:
	DB	"MainSys"
	DB	0
L__35:
	DB	"Repair"
	DB	0
L__36:
	DB	"Cargo"
	DB	0
	XREF _stats_DrawHealthBar:ROM
	XREF _modicons:ROM
	XREF _trekgui:ROM
	XREF _health_GetHealthPercent:ROM
	XREF _gfx_RLETSprite:ROM
	XREF _gfx_GetStringWidth:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_Rectangle:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _strlen:ROM
	XREF __idivu:ROM
	XREF __imulu:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __setflag:ROM
	XREF __seqcase:ROM
	XREF __imul_b:ROM
	XREF __ishru_b:ROM
	XDEF _Screen_Background
	XDEF _module_RenderGeneral
	XDEF _Screen_UITacticalStats
	XDEF _Screen_UISystemStats
	XDEF _Screen_RenderUI
	XDEF _num_GetLength
	XDEF _text_GetCenterX
	XDEF _moduledb
	XDEF _version
	XDEF _tact_title
	XDEF _mains_title
	END
