; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\STATSCREENS.C"
	.assume ADL=1
	SEGMENT DATA
_mains_title:
	DB	91
	DB	77
	DB	65
	DB	73
	DB	78
	DB	32
	DB	83
	DB	89
	DB	83
	DB	32
	DB	67
	DB	79
	DB	78
	DB	84
	DB	82
	DB	79
	DB	76
	DB	93
	DB	0
_shields_title:
	DB	91
	DB	68
	DB	69
	DB	70
	DB	69
	DB	78
	DB	83
	DB	69
	DB	32
	DB	67
	DB	79
	DB	78
	DB	84
	DB	82
	DB	79
	DB	76
	DB	93
	DB	0
_tact_title:
	DB	91
	DB	84
	DB	65
	DB	67
	DB	84
	DB	73
	DB	67
	DB	65
	DB	76
	DB	32
	DB	83
	DB	89
	DB	83
	DB	32
	DB	67
	DB	79
	DB	78
	DB	84
	DB	82
	DB	79
	DB	76
	DB	93
	DB	0
_version:
	DB	118
	DB	48
	DB	46
	DB	56
	DB	52
	DB	32
	DB	112
	DB	114
	DB	101
	DB	45
	DB	97
	DB	108
	DB	112
	DB	104
	DB	97
	DB	0
_mainsys_strings:
	DB	73
	DB	110
	DB	116
	DB	101
	DB	103
	DB	114
	DB	105
	DB	116
	DB	121
	DB	0
	DB	76
	DB	105
	DB	102
	DB	101
	DB	83
	DB	117
	DB	112
	DB	112
	DB	0
	DB	0
	DB	87
	DB	97
	DB	114
	DB	112
	DB	67
	DB	111
	DB	114
	DB	101
	DB	0
	DB	0
	DB	87
	DB	97
	DB	114
	DB	112
	DB	68
	DB	114
	DB	105
	DB	118
	DB	101
	DB	0
	DB	73
	DB	109
	DB	112
	DB	117
	DB	108
	DB	115
	DB	101
	DB	0
	DB	0
	DB	0
	DB	78
	DB	97
	DB	118
	DB	83
	DB	101
	DB	110
	DB	115
	DB	0
	DB	0
	DB	0
	DB	84
	DB	114
	DB	97
	DB	110
	DB	115
	DB	112
	DB	111
	DB	114
	DB	116
	DB	0
;    1	#include <tice.h>
;    2	#include <string.h>
;    3	#include "classes/ships.h"
;    4	#include "statscreens.h"
;    5	#include "gfx/trekgui.h"
;    6	#include "classes/screens.h"
;    7	#include <graphx.h>
;    8	#include <compression.h>
;    9	#include "gfx-engine/gui.h"
;   10	
;   11	char mains_title[] = "[MAIN SYS CONTROL]";
;   12	char shields_title[] = "[DEFENSE CONTROL]";
;   13	char tact_title[] = "[TACTICAL SYS CONTROL]";
;   14	char version[] = "v0.84 pre-alpha";
;   15	
;   16	char mainsys_strings[][10] = {"Integrity", "LifeSupp", "WarpCore", "WarpDrive", "Impulse", "NavSens", "Transport"};
	SEGMENT CODE
;   17	
;   18	int text_GetCenterX(char* string){
_text_GetCenterX:
	CALL	__frameset0
;   19	    return (LCD_WIDTH - gfx_GetStringWidth(string)) / 2;
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_gfx_GetStringWidth
	POP	BC
	LD	BC,HL
	LD	HL,320
	OR	A,A
	SBC	HL,BC
	LD	A,1
	CALL	__ishru_b
;   20	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _text_GetCenterX ***************************
;Name                         Addr/Register   Size   Type
;_gfx_GetStringWidth                 IMPORT  -----   function
;string                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   21	
;   22	int num_GetLength(int number){
_num_GetLength:
	CALL	__frameset0
;   23	    return 1 + (number >= 10) + (number >= 100);
	LD	BC,10
	LD	HL,(IX+6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L__2
	LD	B,1
	JR	L__3
L__2:
	LD	B,0
L__3:
	LD	A,B
	SEXT	HL
	LD	L,B
	INC	HL
	LD	DE,HL
	LD	HL,(IX+6)
	OR	A,A
	LD	BC,100
	SBC	HL,BC
	CALL	__setflag
	JP	M,L__5
	LD	B,1
	JR	L__6
L__5:
	LD	B,0
L__6:
	LD	A,B
	SEXT	HL
	LD	L,B
	ADD	HL,DE
;   24	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _num_GetLength ***************************
;Name                         Addr/Register   Size   Type
;number                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   25	
;   26	void Screen_RenderUI(uint24_t screen, ship_t* Ship, selected_t* select){
_Screen_RenderUI:
	CALL	__frameset0
;   27	    Screen_Background(screen);
	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	CALL	_Screen_Background
	POP	BC
;   28	    gfx_SetTextFGColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   29	    switch(screen & 0xff){
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	CALL	__seqcase
L__8:
	DW	6
	DW	0
	DB	0
	DW24	L_9	

	DW24	L_9	

	DW24	L_4	

	DW24	L_5	

	DW24	L_9	

	DW24	L_9	

	DW24	L_9	

;   30	        case SCRN_OFF:
;   31	            break;
;   32	        case SCRN_SENS:
;   33	            break;
;   34	        case SCRN_TACT:
L_4:
;   35	            Screen_UITacticalStats(&Ship->tactical, select->tactical);
	LD	IY,(IX+12)
	LD	BC,(IY+3)
	PUSH	BC
	LD	BC,(IX+9)
	LD	HL,339
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_Screen_UITacticalStats
	POP	BC
	POP	BC
;   36	            break;
	JR	L_9
;   37	        case SCRN_MAINS:
L_5:
;   38	            Screen_UISystemStats(&Ship->system, select->mains);
	LD	IY,(IX+12)
	LD	BC,(IY+0)
	PUSH	BC
	LD	IY,(IX+9)
	PEA	IY+15
	CALL	_Screen_UISystemStats
	POP	BC
	POP	BC
;   39	            break;
;   40	        case SCRN_TRANSPORT:
;   41	            break;
;   42	        case SCRN_CARGO:
;   43	            break;
;   44	    }
L_9:
;   45	    if(screen > 0xff) {
	LD	BC,(IX+6)
	LD	HL,255
	OR	A,A
	SBC	HL,BC
	JR	NC,L_10
;   46	        gfx_PrintStringXY("Info Window Here", 60, 100);
	LD	BC,100
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	BC,L__10
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   47	    }
L_10:
;   48	    gfx_BlitBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;   49	    gfx_SetTextFGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   50	    return;
;   51	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_RenderUI ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Blit                           IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_Screen_UISystemStats               IMPORT  -----   function
;_Screen_UITacticalStats             IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_Screen_Background                  IMPORT  -----   function
;select                               IX+12      3   parameter
;Ship                                  IX+9      3   parameter
;screen                                IX+6      3   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__10:
	DB	"Info Window Here"
	DB	0
	SEGMENT CODE
;   52	
;   53	void Screen_UISystemStats(module_t* systems, uint24_t selected){
_Screen_UISystemStats:
	LD	HL,-23
	CALL	__frameset
;   54	    unsigned char i, cur_y;
;   55	    int cur_x;
;   56	    gfx_PrintStringXY(mains_title, text_GetCenterX(mains_title), viewer_y);
	LD	BC,20
	PUSH	BC
	LD	BC,_mains_title
	PUSH	BC
	CALL	_text_GetCenterX
	POP	BC
	PUSH	HL
	LD	BC,_mains_title
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   57	    for(i = 0; i < SYS_MAX; i++){
	LD	(IX+-1),0
	JR	L_18
L_16:
;   58	        // loop module health display
;   59	        module_t* module = &systems[i];
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,54
	CALL	__imul_b
	LD	BC,(IX+6)
	ADD	HL,BC
	LD	(IX+-5),HL
;   60	        cur_y = i * 15 + viewer_y + 17;
	LD	B,15
	LD	C,(IX+-1)
	MLT	BC
	LD	A,C
	ADD	A,37
	LD	(IX+-2),A
;   61	        cur_x = viewer_x;
;   62	        if(selected == i) {
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+9)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_14
;   63	            gfx_SetColor(231);
	LD	BC,231
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   64	            gfx_FillRectangle(cur_x - 6, cur_y - 3, 5, 13);
	LD	BC,13
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	DEC	HL
	DEC	HL
	DEC	HL
	PUSH	HL
	LD	BC,24
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   65	        }
L_14:
;   66	        gfx_SetColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   67	        gfx_SetTextXY(cur_x, cur_y);
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,30
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   68	        if(module->assigned){
	LD	IY,(IX+-5)
	LD	A,(IY+1)
	OR	A,A
	JR	Z,L_17
;   69	            signed int health = health_GetHealthPercent(&module->health),
	LD	IY,(IX+-5)
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	LD	(IX+-8),HL
;   70	                        spend = power_GetPowerSpend(&module->power),
	LD	IY,(IX+-5)
	LEA	BC,IY+6
	LD	(IX+-23),BC
	PUSH	BC
	CALL	_power_GetPowerSpend
	POP	BC
	LD	(IX+-11),HL
;   71	                        spendpercent = power_GetSpendPercent(&module->power),
	LD	BC,(IX+-23)
	PUSH	BC
	CALL	_power_GetSpendPercent
	POP	BC
	LD	(IX+-14),HL
;   72	                        source = power_GetDrawSource(&module->power),
	LD	BC,(IX+-23)
	PUSH	BC
	CALL	_power_GetDrawSource
	POP	BC
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	(IX+-17),HL
;   73	                        pow_res = power_GetBatteryPercent(&module->power);
	LD	BC,(IX+-23)
	PUSH	BC
	CALL	_power_GetBatteryPercent
	POP	BC
	LD	(IX+-20),HL
;   74	            gfx_PrintString(mainsys_strings[module->techtype]);
	LD	IY,(IX+-5)
	LD	A,(IY+3)
	UEXT	HL
	LD	L,A
	LD	A,10
	CALL	__imul_b
	LD	BC,_mainsys_strings
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintString
	POP	BC
;   75	            cur_x += 75;
;   76	            stats_DrawHealthBar(health, 50, cur_x, cur_y, 255, 255);
	LD	BC,255
	PUSH	BC
	PUSH	BC
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	LD	BC,105
	PUSH	BC
	LD	BC,50
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   77	           
;   78	            
;   79	            //gfx_SetTextXY(viewer_x + 100, (i + 1) * 10 + viewer_y + 5);
;   80	            //gfx_PrintUInt(health, 3);
;   81	        }
;   82	    }
L_17:
	INC	(IX+-1)
L_18:
	LD	A,(IX+-1)
	CP	A,6
	JR	C,L_16
;   83	    return;
;   84	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_UISystemStats ***************************
;Name                         Addr/Register   Size   Type
;_stats_DrawHealthBar                IMPORT  -----   function
;_mainsys_strings                    STATIC     70   variable
;_gfx_PrintString                    IMPORT  -----   function
;_power_GetBatteryPercent            IMPORT  -----   function
;_power_GetDrawSource                IMPORT  -----   function
;_power_GetSpendPercent              IMPORT  -----   function
;_power_GetPowerSpend                IMPORT  -----   function
;_health_GetHealthPercent            IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_mains_title                        STATIC     19   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;pow_res                              IX-20      3   variable
;source                               IX-17      3   variable
;spendpercent                         IX-14      3   variable
;spend                                IX-11      3   variable
;health                                IX-8      3   variable
;module                                IX-5      3   variable
;cur_y                                 IX-2      1   variable
;i                                     IX-1      1   variable
;selected                              IX+9      3   parameter
;systems                               IX+6      3   parameter


; Stack Frame Size: 35 (bytes)
;       Spill Code: 0 (instruction)


;   85	
;   86	void Screen_UITacticalStats(module_t* tactical, uint24_t selected){
_Screen_UITacticalStats:
	LD	HL,-24
	CALL	__frameset
;   87	    unsigned char i, cur_y = viewer_y + 20;
	LD	(IX+-5),40
;   88	    int cur_x = viewer_x;
	LD	BC,30
	LD	(IX+-21),BC
;   89	    uint24_t shield_health = 0, shield_resist = 0, shield_num = 0;
	LD	BC,0
	LD	(IX+-8),BC
	LD	(IX+-24),BC
	LD	(IX+-17),BC
;   90	    bool shields_active = false;
	LD	(IX+-18),0
;   91	    gfx_PrintStringXY(shields_title, text_GetCenterX(shields_title), viewer_y);
	LD	BC,20
	PUSH	BC
	LD	BC,_shields_title
	PUSH	BC
	CALL	_text_GetCenterX
	POP	BC
	PUSH	HL
	LD	BC,_shields_title
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   92	    for(i = 0; i < TACT_MAX; i++){
	LD	(IX+-1),0
	JR	L_33
L_31:
;   93	        int temp_y = 22 * i + viewer_y + 20;
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,22
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+40
	LD	(IX+-11),BC
;   94	        int temp_x = cur_x + 110;
;   95	        module_t* module = &tactical[i];
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,54
	CALL	__imul_b
	LD	BC,(IX+6)
	ADD	HL,BC
	LD	(IX+-4),HL
;   96	        if(module->assigned){
	LD	IY,(IX+-4)
	LD	A,(IY+1)
	OR	A,A
	JR	Z,L_32
;   97	            if(module->techtype == SHIELD){
	LD	IY,(IX+-4)
	LD	A,(IY+3)
	CP	A,6
	JR	NZ,L_26
;   98	                if(module->online){
	LD	IY,(IX+-4)
	LD	A,(IY+4)
	OR	A,A
	JR	Z,L_26
;   99	                    shields_active = true;
	LD	(IX+-18),1
;  100	                    shield_health += health_GetHealthPercent(&module->health);
	LD	IY,(IX+-4)
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	LD	BC,(IX+-8)
	ADD	HL,BC
	LD	(IX+-8),HL
;  101	                    shield_resist *= module->data.shields.resistance;
	LD	IY,(IX+-4)
	LD	HL,(IY+27)
	LD	BC,(IX+-24)
	CALL	__imulu
	LD	(IX+-24),HL
;  102	                    shield_num++;
	LD	BC,(IX+-17)
	INC	BC
	LD	(IX+-17),BC
;  103	                }
;  104	            }
L_26:
;  105	            if(selected == i) {
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+9)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_27
;  106	                gfx_SetColor(230);
	LD	BC,230
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  107	                gfx_FillRectangle(temp_x, temp_y, 10, 20);
	LD	BC,20
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,(IX+-11)
	PUSH	BC
	LD	BC,140
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  108	            }
L_27:
;  109	            temp_x += 10;
;  110	            gfx_SetColor(31);
	LD	BC,31
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  111	            if(!module->online) gfx_SetColor(160);
	LD	IY,(IX+-4)
	LD	A,(IY+4)
	OR	A,A
	JR	NZ,L_29
	LD	BC,160
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
L_29:
;  112	            gfx_FillRectangle(temp_x, temp_y, 140, 20);
	LD	BC,20
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	BC,(IX+-11)
	PUSH	BC
	LD	BC,150
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  113	            gfx_SetColor(33);
	LD	BC,33
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  114	            gfx_FillRectangle(temp_x + 2, temp_y + 2, 136, 16);
	LD	BC,16
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	IY,(IX+-11)
	LEA	BC,IY+2
	PUSH	BC
	LD	BC,152
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  115	            temp_x += 5; temp_y += 6;
	LD	IY,(IX+-11)
	LEA	BC,IY+6
	LD	(IX+-11),BC
;  116	            stats_DrawHealthBar(health_GetHealthPercent(&module->health), 80, temp_x, temp_y, 255, 255);
	LD	BC,255
	PUSH	BC
	PUSH	BC
	LD	C,(IX+-11)
	LD	B,0
	PUSH	BC
	LD	BC,155
	PUSH	BC
	LD	BC,80
	PUSH	BC
	LD	IY,(IX+-4)
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	PUSH	HL
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  117	            }
;  118	        }
L_32:
	INC	(IX+-1)
L_33:
	LD	A,(IX+-1)
	CP	A,6
	JR	C,L_31
;  119	        if(shields_active) {
	LD	A,(IX+-18)
	OR	A,A
	JR	Z,L_40
;  120	            gfx_rletsprite_t* shield_icon = icon_shieldsstable;
	LD	HL,_trekgui+6
	LD	BC,(HL)
	LD	(IX+-14),BC
;  121	            shield_health /= shield_num;
	LD	HL,(IX+-8)
	LD	BC,(IX+-17)
	CALL	__idivu
	LD	(IX+-8),HL
;  122	            if(shield_health <= 50) shield_icon = icon_shieldscollapse;
	LD	BC,HL
	LD	HL,50
	OR	A,A
	SBC	HL,BC
	JR	C,L_36
	LD	HL,_trekgui+9
	LD	BC,(HL)
	LD	(IX+-14),BC
L_36:
;  123	            if(shield_health <= 25) shield_icon = icon_shieldsfail;
	LD	BC,(IX+-8)
	LD	HL,25
	OR	A,A
	SBC	HL,BC
	JR	C,L_37
	LD	HL,_trekgui+12
	LD	BC,(HL)
	LD	(IX+-14),BC
L_37:
;  124	            gfx_RLETSprite(shield_icon, cur_x, cur_y);
	LD	BC,40
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,(IX+-14)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  125	            cur_y += shield_icon->height + 10;
	LD	IY,(IX+-14)
	LD	A,(IY+1)
	ADD	A,50
	LD	(IX+-5),A
;  126	            stats_DrawHealthBar(shield_health, 75, cur_x, cur_y, 30, 255);
	LD	BC,255
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	C,(IX+-5)
	LD	B,0
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,75
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  127	            cur_y += 15; cur_x = viewer_x;
	LD	A,(IX+-5)
	ADD	A,15
	LD	(IX+-5),A
	LD	BC,30
	LD	(IX+-21),BC
;  128	        }
L_40:
;  129	        stats_DrawHealthBar(health_GetHealthPercent(&tactical[TACT_MAX].health), 75, cur_x, cur_y, 255, 255);
	LD	BC,255
	PUSH	BC
	PUSH	BC
	LD	C,(IX+-5)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	LD	BC,75
	PUSH	BC
	LD	HL,(IX+6)
	LD	BC,324
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+21
	CALL	_health_GetHealthPercent
	POP	BC
	PUSH	HL
	CALL	_stats_DrawHealthBar
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  130	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_UITacticalStats ***************************
;Name                         Addr/Register   Size   Type
;_gfx_RLETSprite                     IMPORT  -----   function
;_trekgui                            IMPORT     45   variable
;_stats_DrawHealthBar                IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_health_GetHealthPercent            IMPORT  -----   function
;_shields_title                      STATIC     18   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;shield_resist                        IX-24      3   variable
;cur_x                                IX-21      3   variable
;shields_active                       IX-18      1   variable
;shield_num                           IX-17      3   variable
;shield_icon                          IX-14      3   variable
;temp_y                               IX-11      3   variable
;shield_health                         IX-8      3   variable
;cur_y                                 IX-5      1   variable
;module                                IX-4      3   variable
;i                                     IX-1      1   variable
;selected                              IX+9      3   parameter
;tactical                              IX+6      3   parameter


; Stack Frame Size: 36 (bytes)
;       Spill Code: 0 (instruction)


;  131	
;  132	
;  133	
;  134	
;  135	
;  136	
;  137	
;  138	
;  139	
;  140	
;  141	
;  142	
;  143	
;  144	
;  145	
;  146	
;  147	
;  148	void Screen_Background(unsigned char active) {
_Screen_Background:
	LD	HL,-3
	CALL	__frameset
;  149	    int i;
;  150	    gfx_SetTextFGColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  151	    gfx_ZeroScreen();
	CALL	_gfx_ZeroScreen
;  152	    gfx_RLETSprite(shipinterior_left, 0, 0);
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(_trekgui)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  153	    gfx_RLETSprite(shipinterior_right, 160, 0);
	LD	BC,0
	PUSH	BC
	LD	HL,_trekgui+3
	LD	BC,160
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_RLETSprite
	POP	BC
	POP	BC
	POP	BC
;  154	    for(i = 0; i < 320; i++){
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_45
L_43:
;  155	        gfx_SetColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  156	        gfx_Rectangle(i * 64, 216, 64, 20);
	LD	BC,20
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,216
	PUSH	BC
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	PUSH	HL
	CALL	_gfx_Rectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  157	    }
L_45:
	LD	BC,320
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_43
;  158	    gfx_SetColor(116);
	LD	BC,116
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  159	    if(active) gfx_FillRectangle(--active*64+1, 217, 62, 18);
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_48
	DEC	(IX+6)
	LD	BC,18
	PUSH	BC
	LD	BC,62
	PUSH	BC
	LD	BC,217
	PUSH	BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	INC	HL
	PUSH	HL
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
L_48:
;  160	    gfx_PrintStringXY("Defense", 4, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  161	    gfx_PrintStringXY("Tact", 80, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,80
	PUSH	BC
	LD	BC,L__29
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  162	    gfx_PrintStringXY("Mains", 140, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	BC,L__30
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  163	    gfx_PrintStringXY("Repair", 200, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,200
	PUSH	BC
	LD	BC,L__31
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  164	    gfx_PrintStringXY("Cargo", 268, lcars_texty);
	LD	BC,223
	PUSH	BC
	LD	BC,268
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  165	    gfx_SetTextFGColor(148);
	LD	BC,148
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  166	    gfx_PrintStringXY(version, 160 - (7 * strlen(version) / 2), 0);
	LD	BC,0
	PUSH	BC
	LD	BC,_version
	PUSH	BC
	CALL	_strlen
	POP	BC
	LD	A,7
	CALL	__imul_b
	LD	A,1
	CALL	__ishru_b
	LD	BC,HL
	LD	HL,160
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_version
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  167	    gfx_SetTextFGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  168	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _Screen_Background ***************************
;Name                         Addr/Register   Size   Type
;_version                            STATIC     16   variable
;_strlen                             IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_Rectangle                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_trekgui                            IMPORT     45   variable
;_gfx_RLETSprite                     IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;i                                     IX-3      3   variable
;active                                IX+6      1   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__28:
	DB	"Defense"
	DB	0
L__29:
	DB	"Tact"
	DB	0
L__30:
	DB	"Mains"
	DB	0
L__31:
	DB	"Repair"
	DB	0
L__32:
	DB	"Cargo"
	DB	0
	XREF _stats_DrawHealthBar:ROM
	XREF _trekgui:ROM
	XREF _health_GetHealthPercent:ROM
	XREF _power_GetDrawSource:ROM
	XREF _power_GetPowerSpend:ROM
	XREF _power_GetSpendPercent:ROM
	XREF _power_GetBatteryPercent:ROM
	XREF _gfx_RLETSprite:ROM
	XREF _gfx_GetStringWidth:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_Rectangle:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _strlen:ROM
	XREF __idivu:ROM
	XREF __imulu:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __setflag:ROM
	XREF __seqcase:ROM
	XREF __imul_b:ROM
	XREF __ishru_b:ROM
	XDEF _Screen_Background
	XDEF _Screen_UITacticalStats
	XDEF _Screen_UISystemStats
	XDEF _Screen_RenderUI
	XDEF _num_GetLength
	XDEF _text_GetCenterX
	XDEF _mainsys_strings
	XDEF _version
	XDEF _tact_title
	XDEF _shields_title
	XDEF _mains_title
	END
